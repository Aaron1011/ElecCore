buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

repositories {
	maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}." + (System.env.DRONE_BUILD_NUMBER ?: "localBuild")
group= "elec332.core" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ElecCore"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"
	
	replaceIn "main/ElecCore.java"
    replace "#ELECCORE_VER#", (config.mod_version+"."+(System.env.DRONE_BUILD_NUMBER ?: "9999.custom"))
	
	replaceIn "effects/api/ElecCoreAbilitiesAPIVersion.java"
    replace "#API_VER#", (config.abilityAPI_version)
	
	mappings = config.mappings
}

dependencies {
	compile "mcp.mobius.waila:Waila:${config.WAILA_version}_${config.minecraft_version}"
	compile "codechicken:NotEnoughItems:${config.NEI_version}:dev"//${config.minecraft_version}-${config.NEI_version}:dev"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", config.mod_version
    inputs.property "mcversion", config.minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':(config.mod_version+"."+(System.env.DRONE_BUILD_NUMBER ?: "9999.custom")), 'mcversion':config.minecraft_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes //'FMLCorePlugin': 'elec332.core.loader.ElecCoreLoader',
                   //'FMLCorePluginContainsFMLMod': 'true',
				   'FMLAT': 'eleccore_at.cfg'
	}
}


tasks.build.dependsOn('deobfJar')

task deobfJar(type: Jar) { // Generate deobfuscated
	version = "Newest"
    from sourceSets.main.output
    classifier = 'deobf'
}
